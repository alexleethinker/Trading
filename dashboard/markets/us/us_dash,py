import akshare as ak
import pandas as pd 
# pd.set_option('display.max_rows', None)

us_df = pd.read_csv('us_stock.csv', encoding = 'gbk')
stock_us_spot = ak.stock_us_spot_em()
stock_us_spot[['交易所代码', '证券代码']] = stock_us_spot['代码'].str.split('.', expand = True)
# stock_us_spot['总市值'] = (pd.to_numeric(stock_us_spot['总市值'], errors="coerce")/100000000).round(1).fillna('') 
df = us_df.merge(stock_us_spot, on = '证券代码', how = 'inner')
df = df[~df['三级行业'].isnull()]
df = df[~df['涨跌幅'].isnull()]
df = df[~df['总市值'].isnull()]
df['总市值'] = (df['总市值']/100000000).round(2)


import plotly.express as px

fig = px.treemap(df, 
                 path=['一级行业','二级行业','三级行业','证券名称'],  # 指定层次结构，每一个层次都应该是category型的变量
                 values='总市值', # 需要聚合的列名
                 color='涨跌幅', 
                 custom_data=['涨跌幅','证券代码','总市值','最新价'],
                 range_color = [-8, 8], # 色彩范围最大最小值
                 hover_data= {'涨跌幅':':.2',
                             '总市值':':.1f'}, # 鼠标悬浮显示数据的格式
                 color_continuous_scale=["seagreen",'lightgrey', "indianred"],
                 height = 900,
                #  width = 1600,
                 color_continuous_midpoint=0 , # 颜色变化中间值设置为增长率=0
                )
# fig.update_layout({
# 'plot_bgcolor': 'rgba(0, 0, 0, 0)',
# 'paper_bgcolor': 'rgba(0, 0, 0, 0)',
# })
fig.update_coloraxes(showscale=False)
fig.update_traces(textposition='middle center', 
                  textinfo='label', 
                  textfont = dict(color='white'),
                  texttemplate= "%{label}<br>%{customdata[0]:.2f}%<br>",
                  hovertemplate= "%{customdata[1]}<br>%{label}<br>%{customdata[3]:.2f}  (%{customdata[0]:.2f}%)<br>总市值=%{customdata[2]:d}亿") # 显示企业名称和市值，字体24

fig.show()